name: downstream_testing_2

on:
  workflow_dispatch:
  pull_request:
    branches:
      # Only run downstream tests on PRs for releases
      - "[0-9]+.[0-9]+.x"
  push:
    branches:
      - downstream_testing_2

jobs:
  downstream-ubuntu:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    strategy:
      fail-fast: false
      matrix:
        include:
          - name: "pytest-django"
            repo: "pytest-dev/pytest-django"
            docker_profile: "postgres"
            jobs: "test"
            workflow_name: "main.yml"
            matrix_exclude: |
              linting,docs py39-dj40-mysql_innodb-coverage py38-dj32-sqlite-xdist-coverage 
              py38-dj40-sqlite-xdist-coverage py39-djmain-sqlite-coverage py36-dj32-mysql_myisam-coverage
          - name: "pytest-django"
            repo: "pytest-dev/pytest-django"
            docker_profile: "mysql"
            jobs: "test"
            workflow_name: "main.yml"
            matrix_exclude: |
              linting,docs py310-dj40-postgres-xdist-coverage py310-dj32-postgres-xdist-coverage
              py39-dj32-postgres-xdist-coverage py38-dj32-sqlite-xdist-coverage
              py38-dj40-sqlite-xdist-coverage py39-djmain-sqlite-coverage pypy3-dj32-postgres
          - name: "pytest-django"
            repo: "pytest-dev/pytest-django"
            docker_profile: "nodb"
            jobs: "test"
            workflow_name: "main.yml"
            matrix_exclude: |
              linting,docs py310-dj40-postgres-xdist-coverage py310-dj32-postgres-xdist-coverage
              py39-dj32-postgres-xdist-coverage py39-dj40-mysql_innodb-coverage
              py36-dj32-mysql_myisam-coverage pypy3-dj32-postgres

          - name: "pytest-html"
            repo: "pytest-dev/pytest-html"
            docker_profile: "nodb"
            jobs: "test_python"
            workflow_name: "tests.yml"
            matrix_exclude: py36-ubuntu

          - name: "pytest-order"
            repo: "pytest-dev/pytest-order"
            docker_profile: "nodb"
            jobs: "test"
            workflow_name: "pythontests.yml"
            matrix_exclude: 3.6

          - name: "pytest-mock"
            repo: "pytest-dev/pytest-mock"
            docker_profile: "nodb"
            jobs: "test"
            workflow_name: "test.yml"
            matrix_exclude: ""

          - name: "pytest-cov"
            repo: "pytest-dev/pytest-cov"
            docker_profile: "nodb"
            jobs: "test"
            workflow_name: "test.yml"
            # Exclude pypy3 for now; stil working on a suitable regex substitution
            matrix_exclude: |
              3.6 pypy-3.6 pypy-3.7

          - name: "pytest-bdd"
            repo: "pytest-dev/pytest-bdd"
            docker_profile: "nodb"
            jobs: "build"
            workflow_name: "main.yml"
            matrix_exclude: ""

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Checkout ${{ matrix.name }}
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        repository: ${{ matrix.repo }}
        path: ${{ matrix.name }}
    - name: Run Downstream Tests - ${{ matrix.name }}
      run: docker-compose -f ./testing/downstream_testing/docker-compose.yml --profile ${{ matrix.docker_profile }} up --exit-code-from base_${{ matrix.docker_profile }}
      env:
        DS_NAME: ${{ matrix.name }}
        DS_YAML: ./${{ matrix.name }}/.github/workflows/${{ matrix.workflow_name }}
        DS_JOBS: ${{ matrix.jobs }}
        DS_MATRIX_EXCLUDE: ${{ matrix.matrix_exclude }}
        DOCKER_BUILDKIT: 1
        COV_CMD: ""
    - name: Test Results - ${{ matrix.name }}
      if: ${{ always() }}
      run: |
        docker logs base -t &>docker.log
        sort -b -k 1 docker.log
