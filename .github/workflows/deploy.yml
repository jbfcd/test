name: deploy

on:
  push:
    tags:
      # These tags are protected, see:
      # https://github.com/pytest-dev/pytest/settings/tag_protection
      - "[0-9]+.[0-9]+.[0-9]+"
      - "[0-9]+.[0-9]+.[0-9]+rc[0-9]+"


# Set permissions at the job level.
permissions: {}

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    environment: deploy
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        persist-credentials: false
    - name: Build and Check Package
      uses: hynek/build-and-inspect-python-package@v1.5

  deploy:
    if: github.repository == 'pytest-dev/pytest'
    needs: [build]
    runs-on: ubuntu-latest
    timeout-minutes: 30
    environment: deploy
    permissions:
      id-token: write # for pypi oidc publish
    steps:
    - name: Download Package
      uses: actions/download-artifact@v3
      with:
        name: Packages
        path: dist
    - name: Publish package to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1

  release-notes:

    # todo: generate the content in the build  job
    #       the goal being of using a github action script to push the release data
    #       after success instead of creating a complete python/tox env
    needs: [deploy]
    runs-on: ubuntu-latest
    timeout-minutes: 30
    environment: deploy
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        persist-credentials: false
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.8"

    - name: Install tox
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade tox

    - name: Publish GitHub release notes
      env:
        GH_RELEASE_NOTES_TOKEN: ${{ github.token }}
      run: |
        sudo apt-get install pandoc
        tox -e publish-gh-release-notes
